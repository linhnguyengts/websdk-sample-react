{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Room","apiKey","meetingNumber","useParams","leaveUrl","userName","userEmail","className","onClick","e","preventDefault","fetch","method","headers","body","JSON","stringify","parseInt","role","then","res","json","response","signature","document","getElementById","style","display","ZoomMtg","init","isSupportAV","success","join","passWord","console","log","error","catch","setZoomJSLib","preLoadWasm","prepareJssdk","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6PAmCA,SAASA,IAGP,IACIC,EAAS,yBACPC,EAAkBC,cAAlBD,cAEFE,EAAW,wBACXC,EAAW,cACXC,EAAY,0BAmDhB,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,0DAEA,wBAAQC,QArDd,SAAsBC,GACpBA,EAAEC,iBAEFC,MAZsB,wBAYG,CACvBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBd,cAAee,SAASf,GACxBgB,KAdK,MAgBNC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAClBF,MAAK,SAAAG,GAOR,IAAsBC,IANLD,EAASC,UAOxBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,QAEtDC,QAAQC,KAAK,CACXzB,SAAUA,EACV0B,aAAa,EACbC,QAAS,SAACA,GAERH,QAAQI,KAAK,CACXT,UAAWA,EACXrB,cAAee,SAASf,GACxBG,SAAUA,EACVJ,OAAQA,EACRK,UAAWA,EACX2B,SAlCO,GAmCPF,QAAS,SAACA,GACRG,QAAQC,IAAIJ,IAEdK,MAAO,SAACA,GACNF,QAAQC,IAAIC,OAKlBA,MAAO,SAACA,GACNF,QAAQC,IAAIC,SA9BbC,OAAM,SAAAD,GACPF,QAAQE,MAAMA,OAuCZ,+BAxFRR,QAAQU,aAAa,mCAAoC,OAEzDV,QAAQW,cACRX,QAAQY,eA2FOC,MAzFf,WACE,OACE,cAAC,IAAD,UACE,8BAIE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,uBAAZ,SACE,cAAC1C,EAAD,aCdG2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1B,MAAK,YAAkD,IAA/C2B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7B,SAASC,eAAe,SAM1BkB,M","file":"static/js/main.bc825cbb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\ndeclare var ZoomMtg\r\n\r\nZoomMtg.setZoomJSLib('https://source.zoom.us/1.9.0/lib', '/av');\r\n\r\nZoomMtg.preLoadWasm();\r\nZoomMtg.prepareJssdk();\r\n\r\nfunction App(){\r\n  return (\r\n    <Router>\r\n      <div>\r\n\r\n        {/* A <Switch> looks through its children <Route>s and\r\n            renders the first one that matches the current URL. */}\r\n        <Switch>\r\n          <Route path=\"/room/:meetingNumber\">\r\n            <Room />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\t\r\n}\r\n\r\n\r\nfunction Room() {\r\n\r\n  // setup your signature endpoint here: https://github.com/zoom/websdk-sample-signature-node.js\r\n  var signatureEndpoint = 'http://localhost:4000' //'https://desolate-wave-37126.herokuapp.com/'\r\n  var apiKey = 'QfdRaPVDRsWuI93xugQEpQ'\r\n  var { meetingNumber } = useParams();\r\n  var role = 0\r\n  var leaveUrl = 'http://localhost:3000'\r\n  var userName = 'Tony TÃ¨o'\r\n  var userEmail = 'linhnguyengts@gmail.com'\r\n  var passWord = ''\r\n\r\n  function getSignature(e) {\r\n    e.preventDefault();\r\n\r\n    fetch(signatureEndpoint, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({\r\n        meetingNumber: parseInt(meetingNumber),\r\n        role: role\r\n      })\r\n    }).then(res => res.json())\r\n    .then(response => {\r\n      startMeeting(response.signature)\r\n    }).catch(error => {\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  function startMeeting(signature) {\r\n    document.getElementById('zmmtg-root').style.display = 'block'\r\n\r\n    ZoomMtg.init({\r\n      leaveUrl: leaveUrl,\r\n      isSupportAV: true,\r\n      success: (success) => {\r\n\r\n        ZoomMtg.join({\r\n          signature: signature,\r\n          meetingNumber: parseInt(meetingNumber),\r\n          userName: userName,\r\n          apiKey: apiKey,\r\n          userEmail: userEmail,\r\n          passWord: passWord,\r\n          success: (success) => {\r\n            console.log(success)\r\n          },\r\n          error: (error) => {\r\n            console.log(error)\r\n          }\r\n        })\r\n\r\n      },\r\n      error: (error) => {\r\n        console.log(error)\r\n      }\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main>\r\n        <h1>Zoom WebSDK Sample React</h1>\r\n\r\n        <button onClick={getSignature}>Join Meeting</button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}